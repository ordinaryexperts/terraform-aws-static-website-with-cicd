AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  BuildCommand:
    Type: String

  CodeBuildDockerImageIdentifier:
    Type: String

  CloudFrontDistributionId:
    Type: String

  NotificationEmail:
    Type: String
    Default: ''

  PipelineBucket:
    Type: String

  SourceCodeCommitRepoName:
    Type: String

  SourceCodeCommitRepoBranch:
    Type: String

  WebsiteBucket:
    Type: String

Conditions:

  EnablePipelineNotifications: !Not [!Equals [ !Ref NotificationEmail, '' ]]

Resources:

  DeployNotificationTopic:
    Condition: EnablePipelineNotifications
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        -
          Endpoint: !Ref NotificationEmail
          Protocol: 'email'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      Policies:
        -
          PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              -
                Sid: AllowBuilds
                Action:
                  - 'codebuild:StartBuild'
                Effect: Allow
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-DeploySite"
              -
                Sid: AllowLogging
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Effect: Allow
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-DeploySite:*"
              -
                Sid: AllowDownloadArtifacts
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineBucket}/*SourceOutp*"
                Effect: Allow
              -
                Sid: AllowUpdateWebsite
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub "arn:aws:s3:::${WebsiteBucket}/*"
                Effect: Allow
              -
                Sid: AllowCloudFrontInvalidation
                Action:
                  - cloudfront:CreateInvalidation
                Resource:
                  # CloudFront doesn't support resource-level policies:
                  # https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html#networking_svcs
                  - "*"
                Effect: Allow
            Version: '2012-10-17'

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      Policies:
        -
          PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              -
                Sid: AllowCodeBuildIntegration
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds # Added because of an error in build logs showing access was denied on this action.
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildDeploySite}"

              # https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-permissions-reference.html#aa-acp
              -
                Sid: AllowCodeCommitIntegration
                Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:CancelUploadArchive
                Resource: !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceCodeCommitRepoName}"

              -
                Sid: AllowGetVersioningOnPipelineBucket
                Action:
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineBucket}"
                Effect: Allow
              -
                Sid: AllowPipelineArtifactStorage
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineBucket}/*"
                Effect: Allow
            Version: '2012-10-17'

  CodeBuildDeploySite:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-DeploySite
      Description: Deploy site to S3
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref CodeBuildDockerImageIdentifier
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.1
          phases:
            build:
              commands:
                - ${BuildCommand}
            post_build:
              commands:
                - aws s3 cp --recursive ./public s3://${WebsiteBucket}/
                - aws cloudfront create-invalidation --distribution-id ${CloudFrontDistributionId} --paths '/*'
      TimeoutInMinutes: 10

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              Configuration:
                RepositoryName: !Ref SourceCodeCommitRepoName
                BranchName: !Ref SourceCodeCommitRepoBranch
              InputArtifacts: []
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            -
              Name: Artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildDeploySite
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DeployOutput
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  DeployNotificationTopicPolicy:
    Condition: EnablePipelineNotifications
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowCWEPublishToSNS
          Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource: !Ref DeployNotificationTopic
      Topics:
      - !Ref DeployNotificationTopic

  SuccessfulDeployRule:
    Condition: EnablePipelineNotifications
    Type: AWS::Events::Rule
    Properties:
      Description: 'Successful CodePipeline'
      State: ENABLED
      EventPattern:
        source:
        - 'aws.codepipeline'
        detail-type:
        - 'CodePipeline Pipeline Execution State Change'
        detail:
          pipeline:
          - !Ref Pipeline
          state:
          - SUCCEEDED
      Targets:
      - Arn:
          Ref: DeployNotificationTopic
        Id: 'DeployNotificationTopicTarget'
        InputTransformer:
          InputTemplate: !Sub '"SUCCESS: The <pipeline> pipeline has completed successfully: https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/<pipeline>"'
          InputPathsMap:
            pipeline: '$.detail.pipeline'

  FailedCodePipelineRule:
    Condition: EnablePipelineNotifications
    Type: AWS::Events::Rule
    Properties:
      Description: 'Failed CodePipeline'
      State: ENABLED
      EventPattern:
        source:
        - 'aws.codepipeline'
        detail-type:
        - 'CodePipeline Pipeline Execution State Change'
        detail:
          pipeline:
          - !Ref Pipeline
          state:
          - FAILED
      Targets:
      - Arn:
          Ref: DeployNotificationTopic
        Id: 'DeployNotificationTopicTarget'
        InputTransformer:
          InputTemplate: !Sub '"ERROR: The <pipeline> pipeline has failed!: https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/<pipeline>"'
          InputPathsMap:
            pipeline: '$.detail.pipeline'
